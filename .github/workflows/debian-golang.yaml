# generate a github action to build debian docker image
# and push to ghcr.io/vertisky/devcontainers
name: Debian-Golang
on:
  push:
    paths:
      - .github/workflows/debian-golang.yaml
      - containers/debian.Dockerfile
      - .dockerignore
      - containers/shell/**
  pull_request:
    paths:
      - .github/workflows/debian-golang.yaml
      - containers/debian.Dockerfile
      - .dockerignore
      - containers/shell/**

jobs:
  verify:
    runs-on: ubuntu-latest
    needs: ['gather']
    steps:
      - uses: actions/checkout@v3

      - name: Login to ghcr.io
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to dockerhub to avoid rate limits
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Debian
        run: docker build --build-arg GO_VERSION=latest -t ghcr.io/vertisky/devcontainer:golang-debian -f ./containers/debian.Dockerfile .

  gather:
    runs-on: ubuntu-latest
    outputs:
      go-versions: ${{ steps.get-go-versions.outputs.go-versions }}
    steps:
      - uses: actions/checkout@v3

      - uses: actions/checkout@v3
        with:
          repository: asdf-vm/asdf.git
          path: ./.asdf
          ref: v0.11.0

      - name: Install zsh
        run: sudo apt-get update && sudo apt-get install -y zsh

      - name: Get go versions
        id: get-go-versions
        run: |
          ./.asdf/bin/asdf plugin add golang
          autoload is-at-least
          versions=()
          ./.asdf/bin/asdf list all golang | sort -V | while read line ; do
              if is-at-least 1.16.0 $line; then
                  versions+=("$line")
              fi
          done
          echo "go-versions=$(jq --compact-output --null-input '$ARGS.positional' --args -- "${versions[@]}")" >> $GITHUB_OUTPUT
        shell: zsh {0}

  publish:
    runs-on: ubuntu-latest
    needs: ['verify', 'gather']
    if: github.event_name == 'push'
    permissions:
      packages: write
    strategy:
      max-parallel: 10
      matrix:
        go-version: ${{ fromJson(needs.gather.outputs.go-versions) }}
    steps:
      - uses: actions/checkout@v3

      - name: Login to ghcr.io
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to dockerhub to avoid rate limits
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - uses: docker/setup-qemu-action@v2

      - run: docker context create builders

      - uses: docker/setup-buildx-action@v2
        with:
          version: latest
          endpoint: builders

      - name: set variables
        id: vars
        run: |
          BRANCH=${GITHUB_REF#refs/heads/}
          TAG=${GITHUB_REF#refs/tags/}
          echo commit=$(git rev-parse --short HEAD) >> $GITHUB_OUTPUT
          echo created=$(date -u +%Y-%m-%dT%H:%M:%SZ) >> $GITHUB_OUTPUT
          if [ "$TAG" != "$GITHUB_REF" ]; then
            echo version=${{ matrix.go-version }}-$TAG >> $GITHUB_OUTPUT
            echo debian_version=${{ matrix.go-version }}-debian-$TAG >> $GITHUB_OUTPUT
            echo platforms=linux/amd64 >> $GITHUB_OUTPUT
            echo main=true >> $GITHUB_OUTPUT
          elif [ "$BRANCH" = "main" ]; then
            echo version=${{ matrix.go-version }}-debian-latest >> $GITHUB_OUTPUT
            echo debian_version=${{ matrix.go-version }}-debian >> $GITHUB_OUTPUT
            echo platforms=linux/amd64 >> $GITHUB_OUTPUT
            echo main=true >> $GITHUB_OUTPUT
          else
            echo version=${{ matrix.go-version }}-$BRANCH >> $GITHUB_OUTPUT
            echo debian_version=${{ matrix.go-version }}-debian-$BRANCH >> $GITHUB_OUTPUT
            echo platforms=linux/amd64 >> $GITHUB_OUTPUT
            echo main=false >> $GITHUB_OUTPUT
          fi

      - name: Build and push final image
        uses: docker/build-push-action@v3
        if: ${{ steps.vars.outputs.main }}
        with:
          context: .
          file: ./containers/debian.Dockerfile
          platforms: ${{ steps.vars.outputs.platforms }}
          push: true
          build-args: |
            CREATED=${{ steps.vars.outputs.created }}
            REVISION=${{ steps.vars.outputs.commit }}
            VERSION=${{ steps.vars.outputs.version }}
            GO_VERSION=${{ matrix.go-version }}
          tags: |
            ghcr.io/vertisky/devcontainers-go:${{ steps.vars.outputs.version }}
            ghcr.io/vertisky/devcontainers-go:${{ steps.vars.outputs.debian_version }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
